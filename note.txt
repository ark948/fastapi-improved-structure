Poetry
FastAPI
SqlAlchemy
Alembic
Redis
Celery
Gunicorn
NGinx
Docker



> alembic init -t async migrations
> alembic revision --autogenerate -m "User Model"
> alembic upgrade head



- trying to utilize: pytest-postgresql plugin
> pip add <package name>


> psql -p 5434 -U arman -d armandb



notable features to implement:
user account verification using otp and redis
secret key rotation
rate-limiting
role-based authorization


- to run redis docker image on port 6379:
docker run -p 6379:6379 -it redis/redis-stack

This will run redis/redis-stack image, port 6379 will be exposed, and in interactive mode





following modules are related to role feature:
routers (as opposed to views)
constants
some classes in schemas (such as roles and users)
routers folder moved to api (so to have endpoints.py)
note that we will be utilizing oauth2 scopes, these scopes represent permissions
secuity.py

role checking works (by oauth2 scopes)
now attempting to combine the two approach (oauth2 scopes and RoleChecker dependency)
role_checker

user03 has customer role